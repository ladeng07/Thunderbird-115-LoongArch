<?xml version="1.0"?>

<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
                 type="text/css"?>

<?xml-stylesheet href="chrome://communicator/skin/places/editBookmarkOverlay.css"?>
<?xml-stylesheet href="chrome://communicator/content/places/places.css"?>
<?xml-stylesheet href="chrome://communicator/skin/places/organizer.css"?>

<?xul-overlay href="chrome://communicator/content/places/placesOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/places/editBookmarkOverlay.xul"?>

<!DOCTYPE window [
  <!ENTITY % editBookmarkOverlayDTD SYSTEM "chrome://communicator/locale/places/editBookmarkOverlay.dtd">
  %editBookmarkOverlayDTD;
]>

<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        title="485100: Exchanging a letter of a tag name with its big/small equivalent removes tag from bookmark"
        onload="runTest();">

  <script src="chrome://mochikit/content/MochiKit/packed.js" />
  <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
  <script src="chrome://communicator/content/places/editBookmarkOverlay.js"/>

  <body xmlns="http://www.w3.org/1999/xhtml" />

  <vbox id="editBookmarkPanelContent"/>

  <script>
  <![CDATA[

    function runTest() {
      var bs = Cc["@mozilla.org/browser/nav-bookmarks-service;1"].
               getService(Ci.nsINavBookmarksService);
      var ts = Cc["@mozilla.org/browser/tagging-service;1"].
               getService(Ci.nsITaggingService);
      function uri(spec) {
        return Services.io.newURI(spec);
      }

      var testURI = uri("http://www.mozilla.org/");
      var testTag = "foo";
      var testTagUpper = "Foo";

      // Add a bookmark
      var itemId = bs.insertBookmark(bs.toolbarFolder,
                                     testURI,
                                     bs.DEFAULT_INDEX,
                                     "mozilla");

      // Init panel
      ok(gEditItemOverlay, "gEditItemOverlay is in context");
      gEditItemOverlay.initPanel(itemId);

      // add a tag
      document.getElementById("editBMPanel_tagsField").value = testTag;
      gEditItemOverlay.onTagsFieldBlur();

      // test that the tag has been added in the backend
      is(ts.getTagsForURI(testURI)[0], testTag, "tags match");

      // change the tag
      document.getElementById("editBMPanel_tagsField").value = testTagUpper;
      gEditItemOverlay.onTagsFieldBlur();

      // test that the tag has been added in the backend
      is(ts.getTagsForURI(testURI)[0], testTagUpper, "tags match");

      // Cleanup.
      ts.untagURI(testURI, [testTag]);
      bs.removeItem(itemId);
    }
  ]]>
  </script>

</window>
