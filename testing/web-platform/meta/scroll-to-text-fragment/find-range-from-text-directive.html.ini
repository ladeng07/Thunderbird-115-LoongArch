[find-range-from-text-directive.html]
  expected:
    if os == "mac": [OK, TIMEOUT]
    [TIMEOUT, OK]
  [inverted range search.]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]
      [NOTRUN, PASS, TIMEOUT]

  [Suffix comes before |end|.]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]
      [NOTRUN, PASS, TIMEOUT]

  [Multiple overlapping prefixes.]
    expected: FAIL

  [match doesn't immediately follow prefix.]
    expected:
      if os == "android": [NOTRUN, PASS, TIMEOUT]
      FAIL

  [match doesn't immediately follow first prefix instance.]
    expected:
      if os == "android": [TIMEOUT, NOTRUN, PASS, FAIL]
      [FAIL, PASS, TIMEOUT, NOTRUN]

  [Suffix must be end bounded.]
    expected:
      if os == "mac": [PASS, TIMEOUT, NOTRUN]
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      [NOTRUN, PASS, TIMEOUT]

  [non-existent exact match.]
    expected:
      if os == "android": [NOTRUN, PASS, TIMEOUT]
      [PASS, TIMEOUT, NOTRUN]

  [non-existent range match.]
    expected:
      if os == "android": [NOTRUN, PASS, TIMEOUT]
      [PASS, TIMEOUT, NOTRUN]

  [Multiple overlapping one letter prefixes.]
    expected: FAIL

  [Content appears between match and suffix.]
    expected:
      if os == "mac": [PASS, NOTRUN]
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      [NOTRUN, PASS]

  [overlapping exact matches with suffix.]
    expected:
      if os == "android": [NOTRUN, FAIL, TIMEOUT]
      [FAIL, TIMEOUT, NOTRUN]

  [Match with no suffix.]
    expected:
      if os == "win": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]
      [NOTRUN, FAIL, TIMEOUT]

  [Match text after prefix.]
    expected: FAIL

  [Search invisible content between |end| and suffix.]
    expected:
      if os == "win": [FAIL, TIMEOUT, NOTRUN]
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]
      [NOTRUN, FAIL, TIMEOUT]

  [Range with preceeding suffix.]
    expected:
      if os == "mac": [PASS, TIMEOUT, NOTRUN]
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      [NOTRUN, PASS, TIMEOUT]

  [no suffix forces |end| to be end bounded.]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]
      [NOTRUN, PASS, TIMEOUT]

  [|end| must be start bounded even if full range is word bounded.]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]
      [NOTRUN, PASS, TIMEOUT]

  [non-existent |end|.]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]
      [NOTRUN, PASS, TIMEOUT]

  [suffix means |start| need not end on word boundary.]
    expected:
      if os == "linux": [FAIL, NOTRUN]
      FAIL

  [Search invisible content between prefix and match.]
    expected: FAIL

  [overlapping one letter exact matches with suffix.]
    expected:
      if os == "android": [NOTRUN, FAIL, TIMEOUT]
      [FAIL, TIMEOUT, NOTRUN]

  [Basic smoke test - full word match.]
    expected: FAIL

  [matching range search.]
    expected:
      if os == "android": [NOTRUN, FAIL, TIMEOUT]
      if os == "linux": [TIMEOUT, FAIL, NOTRUN]
      [FAIL, TIMEOUT, NOTRUN]

  [Prefix need not end on a word boundary.]
    expected: FAIL

  [|start| doesn't need to start on word boundary.]
    expected:
      if os == "linux": [FAIL, NOTRUN]
      FAIL

  [no-prefix; suffix means |start| need not end on word boundary.]
    expected:
      if os == "android": [NOTRUN, FAIL, TIMEOUT]
      [FAIL, TIMEOUT, NOTRUN]

  [no-prefix; |end| forces |start| to end on word boundary.]
    expected:
      if os == "android": [NOTRUN, PASS, TIMEOUT]
      [PASS, TIMEOUT, NOTRUN]

  [no-prefix; no |end| or suffix forces |start| to end on word boundary.]
    expected:
      if os == "android": [NOTRUN, PASS, TIMEOUT]
      [PASS, TIMEOUT, NOTRUN]

  [Non-existent suffix.]
    expected:
      if os == "win": [PASS, NOTRUN, TIMEOUT]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]
      [NOTRUN, PASS, TIMEOUT]

  [Suffix need not be start bounded.]
    expected:
      if os == "win": [FAIL, NOTRUN, TIMEOUT]
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]
      [NOTRUN, FAIL, TIMEOUT]

  [|end| must be start bounded.]
    expected:
      if os == "win": [PASS, TIMEOUT, NOTRUN]
      if os == "mac": [PASS, TIMEOUT, NOTRUN]
      [NOTRUN, PASS, TIMEOUT]

  [suffix means |end| need not be end bounded.]
    expected:
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]
      if os == "win": [FAIL, TIMEOUT, NOTRUN]
      [NOTRUN, FAIL, TIMEOUT]

  [|start| must start on a word boundary.]
    expected:
      if os == "android": [NOTRUN, PASS, TIMEOUT]
      [PASS, TIMEOUT, NOTRUN]

  [Non-matching suffix search continues to prefix match.]
    expected:
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]
      [NOTRUN, FAIL, TIMEOUT]

  [Range end matches correct suffix.]
    expected:
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]
      if os == "win": [NOTRUN, TIMEOUT, FAIL]
      [NOTRUN, FAIL, TIMEOUT]

  [Non-matching suffix in first potential match.]
    expected:
      if os == "mac": [FAIL, TIMEOUT, NOTRUN]
      if os == "win": [FAIL, NOTRUN, TIMEOUT]
      [NOTRUN, FAIL, TIMEOUT]

  [match doesn't immediately follow prefix.]
    expected: [PASS, TIMEOUT, NOTRUN]

  [prefix with non-existent range match.]
    expected:
      if os == "linux": [PASS, TIMEOUT, NOTRUN]
      [PASS, TIMEOUT]

  [no |end| or suffix forces |start| to end on word boundary.]
    expected:
      if os == "linux": [PASS, TIMEOUT]

  [prefix with non-existent exact match.]
    expected:
      if os == "linux": [PASS, NOTRUN]
