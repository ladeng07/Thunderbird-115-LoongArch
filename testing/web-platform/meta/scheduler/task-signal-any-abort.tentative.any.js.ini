[task-signal-any-abort.tentative.any.serviceworker.html]
  expected:
    if (os == "win") and not debug and (processor == "x86_64"): [OK, TIMEOUT]
  [TaskSignal.any() works with an empty array of signals]
    expected: FAIL

  [TaskSignal.any() follows a single signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() follows multiple signals (using AbortController)]
    expected: FAIL

  [TaskSignal.any() returns an aborted signal if passed an aborted signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() can be passed the same signal more than once (using AbortController)]
    expected: FAIL

  [TaskSignal.any() uses the first instance of a duplicate signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() signals are composable (using AbortController)]
    expected: FAIL

  [TaskSignal.any() works with signals returned by AbortSignal.timeout() (using AbortController)]
    expected: FAIL

  [TaskSignal.any() works with intermediate signals (using AbortController)]
    expected: FAIL

  [Abort events for TaskSignal.any() signals fire in the right order (using AbortController)]
    expected: FAIL

  [TaskSignal.any() follows a single signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() follows multiple signals (using TaskController)]
    expected: FAIL

  [TaskSignal.any() returns an aborted signal if passed an aborted signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() can be passed the same signal more than once (using TaskController)]
    expected: FAIL

  [TaskSignal.any() uses the first instance of a duplicate signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() signals are composable (using TaskController)]
    expected: FAIL

  [TaskSignal.any() works with signals returned by AbortSignal.timeout() (using TaskController)]
    expected: FAIL

  [TaskSignal.any() works with intermediate signals (using TaskController)]
    expected: FAIL

  [Abort events for TaskSignal.any() signals fire in the right order (using TaskController)]
    expected: FAIL


[task-signal-any-abort.tentative.any.sharedworker.html]
  [TaskSignal.any() works with an empty array of signals]
    expected: FAIL

  [TaskSignal.any() follows a single signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() follows multiple signals (using AbortController)]
    expected: FAIL

  [TaskSignal.any() returns an aborted signal if passed an aborted signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() can be passed the same signal more than once (using AbortController)]
    expected: FAIL

  [TaskSignal.any() uses the first instance of a duplicate signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() signals are composable (using AbortController)]
    expected: FAIL

  [TaskSignal.any() works with signals returned by AbortSignal.timeout() (using AbortController)]
    expected: FAIL

  [TaskSignal.any() works with intermediate signals (using AbortController)]
    expected: FAIL

  [Abort events for TaskSignal.any() signals fire in the right order (using AbortController)]
    expected: FAIL

  [TaskSignal.any() follows a single signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() follows multiple signals (using TaskController)]
    expected: FAIL

  [TaskSignal.any() returns an aborted signal if passed an aborted signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() can be passed the same signal more than once (using TaskController)]
    expected: FAIL

  [TaskSignal.any() uses the first instance of a duplicate signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() signals are composable (using TaskController)]
    expected: FAIL

  [TaskSignal.any() works with signals returned by AbortSignal.timeout() (using TaskController)]
    expected: FAIL

  [TaskSignal.any() works with intermediate signals (using TaskController)]
    expected: FAIL

  [Abort events for TaskSignal.any() signals fire in the right order (using TaskController)]
    expected: FAIL


[task-signal-any-abort.tentative.any.worker.html]
  [TaskSignal.any() works with an empty array of signals]
    expected: FAIL

  [TaskSignal.any() follows a single signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() follows multiple signals (using AbortController)]
    expected: FAIL

  [TaskSignal.any() returns an aborted signal if passed an aborted signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() can be passed the same signal more than once (using AbortController)]
    expected: FAIL

  [TaskSignal.any() uses the first instance of a duplicate signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() signals are composable (using AbortController)]
    expected: FAIL

  [TaskSignal.any() works with signals returned by AbortSignal.timeout() (using AbortController)]
    expected: FAIL

  [TaskSignal.any() works with intermediate signals (using AbortController)]
    expected: FAIL

  [Abort events for TaskSignal.any() signals fire in the right order (using AbortController)]
    expected: FAIL

  [TaskSignal.any() follows a single signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() follows multiple signals (using TaskController)]
    expected: FAIL

  [TaskSignal.any() returns an aborted signal if passed an aborted signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() can be passed the same signal more than once (using TaskController)]
    expected: FAIL

  [TaskSignal.any() uses the first instance of a duplicate signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() signals are composable (using TaskController)]
    expected: FAIL

  [TaskSignal.any() works with signals returned by AbortSignal.timeout() (using TaskController)]
    expected: FAIL

  [TaskSignal.any() works with intermediate signals (using TaskController)]
    expected: FAIL

  [Abort events for TaskSignal.any() signals fire in the right order (using TaskController)]
    expected: FAIL


[task-signal-any-abort.tentative.any.html]
  [TaskSignal.any() works with an empty array of signals]
    expected: FAIL

  [TaskSignal.any() follows a single signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() follows multiple signals (using AbortController)]
    expected: FAIL

  [TaskSignal.any() returns an aborted signal if passed an aborted signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() can be passed the same signal more than once (using AbortController)]
    expected: FAIL

  [TaskSignal.any() uses the first instance of a duplicate signal (using AbortController)]
    expected: FAIL

  [TaskSignal.any() signals are composable (using AbortController)]
    expected: FAIL

  [TaskSignal.any() works with signals returned by AbortSignal.timeout() (using AbortController)]
    expected: FAIL

  [TaskSignal.any() works with intermediate signals (using AbortController)]
    expected: FAIL

  [Abort events for TaskSignal.any() signals fire in the right order (using AbortController)]
    expected: FAIL

  [TaskSignal.any() follows a single signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() follows multiple signals (using TaskController)]
    expected: FAIL

  [TaskSignal.any() returns an aborted signal if passed an aborted signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() can be passed the same signal more than once (using TaskController)]
    expected: FAIL

  [TaskSignal.any() uses the first instance of a duplicate signal (using TaskController)]
    expected: FAIL

  [TaskSignal.any() signals are composable (using TaskController)]
    expected: FAIL

  [TaskSignal.any() works with signals returned by AbortSignal.timeout() (using TaskController)]
    expected: FAIL

  [TaskSignal.any() works with intermediate signals (using TaskController)]
    expected: FAIL

  [Abort events for TaskSignal.any() signals fire in the right order (using TaskController)]
    expected: FAIL
